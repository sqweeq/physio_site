{"ast":null,"code":"import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING, ADD_ITEM_TO_CART, ADD_ITEM_TO_GUEST_CART, GET_GUEST_CART // DELETE_FROM_GUEST_CART,\n, CLEAR_USER_CART, CLEAR_GUEST_CART, DELETE_FROM_GUEST_CART } from \"./types\";\nimport axios from \"axios\";\nimport { tokenConfig, tokenConfigFormData } from \"../actions/authActions\";\nimport { returnErrors } from \"../actions/errorActions\";\nexport const getItems = () => (dispatch, getState) => {\n  dispatch(setItemsLoading());\n  axios.get(\"/api/items\").then(res => dispatch({\n    type: GET_ITEMS,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n  const items = getState().item.items;\n  const user = getState().auth.user;\n  const isAuthenticated = getState().auth.isAuthenticated;\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")); // added userID to guest cart items\n\n  let newItems = isAuthenticated === true && existingGuestCart && existingGuestCart.filter(item => {\n    if (item.userRefID !== user._id) {\n      item.userRefID = user._id;\n    }\n\n    return item;\n  });\n  let userLocalCompare = newItems && newItems.filter(guestItem => {\n    return items.some(userItem => userItem._id === guestItem._id && guestItem.guestItemID !== userItem.guestItemID);\n  });\n  console.log(userLocalCompare);\n}; // export const loadLocalToUser = () => (dispatch, getState) => {\n//   let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"))\n// };\n\nexport const deleteItem = id => (dispatch, getState) => {\n  axios.delete(`/api/items/${id}`, tokenConfig(getState)).then(res => dispatch({\n    type: DELETE_ITEM,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addItem = (newItem, formData) => (dispatch, getState) => {\n  const form = Object.keys(newItem).reduce((f, k) => {\n    f.append(k, newItem[k]);\n    return f;\n  }, new FormData());\n  console.log(form.getAll(\"productImage\"));\n  return axios.post(\"/api/items\", formData, tokenConfigFormData(getState)).then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addItemToCart = newItem => (dispatch, getState) => {\n  if (newItem.constructor.name === \"Object\") {\n    return axios.post(\"/api/items/cart\", newItem, tokenConfig(getState)).then(res => dispatch({\n      type: ADD_ITEM_TO_CART,\n      payload: res.data\n    })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n  } else if (newItem.length > 1) {\n    newItem.map(item => {\n      return axios.post(\"/api/items/cart\", item, tokenConfig(getState)).then(res => dispatch({\n        type: ADD_ITEM_TO_CART,\n        payload: res.data\n      })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n    });\n  } else if (newItem === []) return null;\n};\nexport const addItemToGuestCart = item => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || []; // const newGuestItemID = uuid();\n  // item.guestItemID = uuidv4() + shortid.generate();\n\n  existingGuestCart.push(item);\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n  dispatch({\n    type: ADD_ITEM_TO_GUEST_CART,\n    payload: item\n  });\n};\nexport const getGuestCartItems = () => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  dispatch({\n    type: GET_GUEST_CART,\n    payload: existingGuestCart\n  });\n};\nexport const deleteGuestItem = item => dispatch => {\n  const existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const newGuestCart = existingGuestCart.filter(cartItem => cartItem.guestItemID !== item.guestItemID);\n  localStorage.setItem(\"guestCart\", JSON.stringify(newGuestCart));\n  dispatch({\n    type: DELETE_FROM_GUEST_CART,\n    payload: item\n  });\n};\nexport const clearGuestCart = () => dispatch => {\n  localStorage.clear();\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n  dispatch({\n    type: CLEAR_GUEST_CART\n  });\n};\nexport const clearUserCart = (user, items) => (dispatch, getState) => {\n  // let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  let newCart = [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(newCart));\n  items.map(item => {\n    if (item.userRefID === user._id) {\n      return axios.delete(`/api/items/${item._id}`, tokenConfig(getState));\n    } else return item;\n  });\n  dispatch({\n    type: CLEAR_USER_CART,\n    payload: user._id\n  });\n}; // export const handleShow = item => {\n//   return {\n//     type: SHOW_MORE,\n//     payload: item\n//   };\n// };\n\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/physio_site/client/src/actions/itemActions.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","ADD_ITEM_TO_CART","ADD_ITEM_TO_GUEST_CART","GET_GUEST_CART","CLEAR_USER_CART","CLEAR_GUEST_CART","DELETE_FROM_GUEST_CART","axios","tokenConfig","tokenConfigFormData","returnErrors","getItems","dispatch","getState","setItemsLoading","get","then","res","type","payload","data","catch","err","response","status","items","item","user","auth","isAuthenticated","existingGuestCart","JSON","parse","localStorage","getItem","newItems","filter","userRefID","_id","userLocalCompare","guestItem","some","userItem","guestItemID","console","log","deleteItem","id","delete","addItem","newItem","formData","form","Object","keys","reduce","f","k","append","FormData","getAll","post","addItemToCart","constructor","name","length","map","addItemToGuestCart","push","setItem","stringify","getGuestCartItems","deleteGuestItem","newGuestCart","cartItem","clearGuestCart","clear","clearUserCart","newCart"],"mappings":"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","sourcesContent":["import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING,\n  ADD_ITEM_TO_CART,\n  ADD_ITEM_TO_GUEST_CART,\n  GET_GUEST_CART,\n  // DELETE_FROM_GUEST_CART,\n  CLEAR_USER_CART,\n  CLEAR_GUEST_CART,\n  DELETE_FROM_GUEST_CART\n} from \"./types\";\nimport axios from \"axios\";\nimport { tokenConfig, tokenConfigFormData } from \"../actions/authActions\";\nimport { returnErrors } from \"../actions/errorActions\";\n\nexport const getItems = () => (dispatch, getState) => {\n  dispatch(setItemsLoading());\n  axios\n    .get(\"/api/items\")\n    .then(res =>\n      dispatch({\n        type: GET_ITEMS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n  const { items } = getState().item;\n  const { user } = getState().auth;\n  const { isAuthenticated } = getState().auth;\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n  // added userID to guest cart items\n  let newItems =\n    isAuthenticated === true &&\n    existingGuestCart &&\n    existingGuestCart.filter(item => {\n      if (item.userRefID !== user._id) {\n        item.userRefID = user._id;\n      }\n      return item;\n    });\n  let userLocalCompare =\n    newItems &&\n    newItems.filter(guestItem => {\n      return items.some(\n        userItem =>\n          userItem._id === guestItem._id &&\n          guestItem.guestItemID !== userItem.guestItemID\n      );\n    });\n  console.log(userLocalCompare);\n};\n// export const loadLocalToUser = () => (dispatch, getState) => {\n//   let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"))\n\n// };\nexport const deleteItem = id => (dispatch, getState) => {\n  axios\n    .delete(`/api/items/${id}`, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_ITEM,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const addItem = (newItem, formData) => (dispatch, getState) => {\n  const form = Object.keys(newItem).reduce((f, k) => {\n    f.append(k, newItem[k]);\n    return f;\n  }, new FormData());\n  console.log(form.getAll(\"productImage\"));\n\n  return axios\n    .post(\"/api/items\", formData, tokenConfigFormData(getState))\n    .then(res =>\n      dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n      })\n    )\n\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const addItemToCart = newItem => (dispatch, getState) => {\n  if (newItem.constructor.name === \"Object\") {\n    return axios\n      .post(\"/api/items/cart\", newItem, tokenConfig(getState))\n      .then(res =>\n        dispatch({\n          type: ADD_ITEM_TO_CART,\n          payload: res.data\n        })\n      )\n      .catch(err =>\n        dispatch(returnErrors(err.response.data, err.response.status))\n      );\n  } else if (newItem.length > 1) {\n    newItem.map(item => {\n      return axios\n        .post(\"/api/items/cart\", item, tokenConfig(getState))\n        .then(res =>\n          dispatch({\n            type: ADD_ITEM_TO_CART,\n            payload: res.data\n          })\n        )\n        .catch(err =>\n          dispatch(returnErrors(err.response.data, err.response.status))\n        );\n    });\n  } else if (newItem === []) return null;\n};\nexport const addItemToGuestCart = item => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  // const newGuestItemID = uuid();\n  // item.guestItemID = uuidv4() + shortid.generate();\n\n  existingGuestCart.push(item);\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n\n  dispatch({\n    type: ADD_ITEM_TO_GUEST_CART,\n    payload: item\n  });\n};\n\nexport const getGuestCartItems = () => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  dispatch({\n    type: GET_GUEST_CART,\n    payload: existingGuestCart\n  });\n};\n\nexport const deleteGuestItem = item => dispatch => {\n  const existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const newGuestCart = existingGuestCart.filter(\n    cartItem => cartItem.guestItemID !== item.guestItemID\n  );\n\n  localStorage.setItem(\"guestCart\", JSON.stringify(newGuestCart));\n  dispatch({\n    type: DELETE_FROM_GUEST_CART,\n    payload: item\n  });\n};\nexport const clearGuestCart = () => dispatch => {\n  localStorage.clear();\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n\n  dispatch({\n    type: CLEAR_GUEST_CART\n  });\n};\nexport const clearUserCart = (user, items) => (dispatch, getState) => {\n  // let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  let newCart = [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(newCart));\n\n  items.map(item => {\n    if (item.userRefID === user._id) {\n      return axios.delete(`/api/items/${item._id}`, tokenConfig(getState));\n    } else return item;\n  });\n\n  dispatch({\n    type: CLEAR_USER_CART,\n    payload: user._id\n  });\n};\n// export const handleShow = item => {\n//   return {\n//     type: SHOW_MORE,\n//     payload: item\n//   };\n// };\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};\n"]},"metadata":{},"sourceType":"module"}