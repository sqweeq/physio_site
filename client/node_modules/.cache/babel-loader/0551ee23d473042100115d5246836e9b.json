{"ast":null,"code":"import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING, ADD_ITEM_TO_CART, ADD_ITEM_TO_GUEST_CART, GET_GUEST_CART, CLEAR_USER_CART, CLEAR_GUEST_CART, DELETE_FROM_GUEST_CART } from \"./types\";\nimport axios from \"axios\";\nimport { tokenConfig, tokenConfigFormData } from \"../actions/authActions\";\nimport { returnErrors } from \"../actions/errorActions\"; // get items from db\n\nexport const getItems = () => (dispatch, getState) => {\n  dispatch(setItemsLoading());\n  axios.get(\"/api/items\").then(res => dispatch({\n    type: GET_ITEMS,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}; // delete items in db\n\nexport const deleteItem = id => (dispatch, getState) => {\n  axios.delete(`/api/items/${id}`, tokenConfig(getState)).then(res => dispatch({\n    type: DELETE_ITEM,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}; // add items to db\n\nexport const addItem = (newItem, formData) => (dispatch, getState) => {\n  const form = Object.keys(newItem).reduce((f, k) => {\n    f.append(k, newItem[k]);\n    return f;\n  }, new FormData());\n  console.log(form.getAll(\"productImage\"));\n  return axios.post(\"/api/items\", formData, tokenConfigFormData(getState)).then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addItemToGuestCart = item => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || []; // const newGuestItemID = uuid();\n  // item.guestItemID = uuidv4() + shortid.generate();\n\n  existingGuestCart.push(item);\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n  dispatch({\n    type: ADD_ITEM_TO_GUEST_CART,\n    payload: item\n  });\n};\nexport const getGuestCartItems = () => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  dispatch({\n    type: GET_GUEST_CART,\n    payload: existingGuestCart\n  });\n};\nexport const deleteGuestItem = item => dispatch => {\n  const existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const newGuestCart = existingGuestCart.filter(cartItem => cartItem.guestItemID !== item.guestItemID);\n  localStorage.setItem(\"guestCart\", JSON.stringify(newGuestCart));\n  dispatch({\n    type: DELETE_FROM_GUEST_CART,\n    payload: item\n  });\n};\nexport const clearGuestCart = () => dispatch => {\n  localStorage.clear();\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n  dispatch({\n    type: CLEAR_GUEST_CART\n  });\n};\nexport const clearUserCart = (user, items) => (dispatch, getState) => {\n  // let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  let newCart = [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(newCart));\n  items.map(item => {\n    if (item.userRefID === user._id) {\n      return axios.delete(`/api/items/${item._id}`, tokenConfig(getState));\n    } else return item;\n  });\n  dispatch({\n    type: CLEAR_USER_CART,\n    payload: user._id\n  });\n}; // export const handleShow = item => {\n//   return {\n//     type: SHOW_MORE,\n//     payload: item\n//   };\n// };\n\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/physio_site/client/src/actions/itemActions.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","ADD_ITEM_TO_CART","ADD_ITEM_TO_GUEST_CART","GET_GUEST_CART","CLEAR_USER_CART","CLEAR_GUEST_CART","DELETE_FROM_GUEST_CART","axios","tokenConfig","tokenConfigFormData","returnErrors","getItems","dispatch","getState","setItemsLoading","get","then","res","type","payload","data","catch","err","response","status","deleteItem","id","delete","addItem","newItem","formData","form","Object","keys","reduce","f","k","append","FormData","console","log","getAll","post","addItemToGuestCart","item","existingGuestCart","JSON","parse","localStorage","getItem","push","setItem","stringify","getGuestCartItems","deleteGuestItem","newGuestCart","filter","cartItem","guestItemID","clearGuestCart","clear","clearUserCart","user","items","newCart","map","userRefID","_id"],"mappings":"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","sourcesContent":["import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING,\n  ADD_ITEM_TO_CART,\n  ADD_ITEM_TO_GUEST_CART,\n  GET_GUEST_CART,\n  CLEAR_USER_CART,\n  CLEAR_GUEST_CART,\n  DELETE_FROM_GUEST_CART\n} from \"./types\";\nimport axios from \"axios\";\nimport { tokenConfig, tokenConfigFormData } from \"../actions/authActions\";\nimport { returnErrors } from \"../actions/errorActions\";\n\n// get items from db\nexport const getItems = () => (dispatch, getState) => {\n  dispatch(setItemsLoading());\n  axios\n    .get(\"/api/items\")\n    .then(res =>\n      dispatch({\n        type: GET_ITEMS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n// delete items in db\nexport const deleteItem = id => (dispatch, getState) => {\n  axios\n    .delete(`/api/items/${id}`, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_ITEM,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n// add items to db\nexport const addItem = (newItem, formData) => (dispatch, getState) => {\n  const form = Object.keys(newItem).reduce((f, k) => {\n    f.append(k, newItem[k]);\n    return f;\n  }, new FormData());\n  console.log(form.getAll(\"productImage\"));\n\n  return axios\n    .post(\"/api/items\", formData, tokenConfigFormData(getState))\n    .then(res =>\n      dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n      })\n    )\n\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const addItemToGuestCart = item => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  // const newGuestItemID = uuid();\n  // item.guestItemID = uuidv4() + shortid.generate();\n\n  existingGuestCart.push(item);\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n\n  dispatch({\n    type: ADD_ITEM_TO_GUEST_CART,\n    payload: item\n  });\n};\n\nexport const getGuestCartItems = () => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  dispatch({\n    type: GET_GUEST_CART,\n    payload: existingGuestCart\n  });\n};\n\nexport const deleteGuestItem = item => dispatch => {\n  const existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const newGuestCart = existingGuestCart.filter(\n    cartItem => cartItem.guestItemID !== item.guestItemID\n  );\n\n  localStorage.setItem(\"guestCart\", JSON.stringify(newGuestCart));\n  dispatch({\n    type: DELETE_FROM_GUEST_CART,\n    payload: item\n  });\n};\nexport const clearGuestCart = () => dispatch => {\n  localStorage.clear();\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n\n  dispatch({\n    type: CLEAR_GUEST_CART\n  });\n};\nexport const clearUserCart = (user, items) => (dispatch, getState) => {\n  // let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  let newCart = [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(newCart));\n\n  items.map(item => {\n    if (item.userRefID === user._id) {\n      return axios.delete(`/api/items/${item._id}`, tokenConfig(getState));\n    } else return item;\n  });\n\n  dispatch({\n    type: CLEAR_USER_CART,\n    payload: user._id\n  });\n};\n// export const handleShow = item => {\n//   return {\n//     type: SHOW_MORE,\n//     payload: item\n//   };\n// };\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};\n"]},"metadata":{},"sourceType":"module"}