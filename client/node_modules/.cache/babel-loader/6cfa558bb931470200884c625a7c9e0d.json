{"ast":null,"code":"import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING, ADD_ITEM_TO_CART, ADD_ITEM_TO_GUEST_CART, GET_GUEST_CART // DELETE_FROM_GUEST_CART,\n, CLEAR_USER_CART, CLEAR_GUEST_CART, DELETE_FROM_GUEST_CART } from \"./types\";\nimport axios from \"axios\";\nimport { tokenConfig, tokenConfigFormData } from \"../actions/authActions\";\nimport { returnErrors } from \"../actions/errorActions\";\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios.get(\"/api/items\").then(res => dispatch({\n    type: GET_ITEMS,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}; // export const loadLocalToUser = () => (dispatch, getState) => {\n//   let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"))\n// };\n\nexport const deleteItem = id => (dispatch, getState) => {\n  axios.delete(`/api/items/${id}`, tokenConfig(getState)).then(res => dispatch({\n    type: DELETE_ITEM,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addItem = (newItem, formData) => (dispatch, getState) => {\n  const form = Object.keys(newItem).reduce((f, k) => {\n    f.append(k, newItem[k]);\n    return f;\n  }, new FormData());\n  console.log(form.getAll(\"productImage\"));\n  return axios.post(\"/api/items\", formData, tokenConfigFormData(getState)).then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addItemToCart = newItem => (dispatch, getState) => {\n  const items = getState().item.items;\n  const user = getState().auth.user;\n  const isAuthenticated = getState().auth.isAuthenticated;\n\n  if (isAuthenticated) {\n    let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")); // added userID to guest cart items\n\n    let newItems = existingGuestCart && existingGuestCart.filter(item => {\n      if (item.userRefID !== user._id) {\n        item.userRefID = user._id;\n      }\n\n      return item;\n    });\n    let userLocalCompare = newItems && newItems.filter(guestItem => {\n      return items.some(userItem => userItem._id === guestItem._id && guestItem.guestItemID !== userItem.guestItemID);\n    });\n    console.log(userLocalCompare); // this.props.addItemToCart(userLocalCompare);\n  }\n\n  if (newItem && newItem.length === 1) {\n    axios.post(\"/api/items/cart\", newItem, tokenConfig(getState)).then(res => dispatch({\n      type: ADD_ITEM_TO_CART,\n      payload: res.data\n    })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n  } else if (newItem && newItem.length > 1) {\n    newItem && newItem.map(item => {\n      return axios.post(\"/api/items/cart\", item, tokenConfig(getState)).then(res => dispatch({\n        type: ADD_ITEM_TO_CART,\n        payload: res.data\n      })); // .catch(err =>\n      //   dispatch(returnErrors(err.response.data, err.response.status))\n      // );\n    });\n  } else if (newItem === []) return null;\n};\nexport const addItemToGuestCart = item => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || []; // const newGuestItemID = uuid();\n  // item.guestItemID = uuidv4() + shortid.generate();\n\n  existingGuestCart.push(item);\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n  dispatch({\n    type: ADD_ITEM_TO_GUEST_CART,\n    payload: item\n  });\n};\nexport const getGuestCartItems = () => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  dispatch({\n    type: GET_GUEST_CART,\n    payload: existingGuestCart\n  });\n};\nexport const deleteGuestItem = item => dispatch => {\n  const existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const newGuestCart = existingGuestCart.filter(cartItem => cartItem.guestItemID !== item.guestItemID);\n  localStorage.setItem(\"guestCart\", JSON.stringify(newGuestCart));\n  dispatch({\n    type: DELETE_FROM_GUEST_CART,\n    payload: item\n  });\n};\nexport const clearGuestCart = () => dispatch => {\n  localStorage.clear();\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n  dispatch({\n    type: CLEAR_GUEST_CART\n  });\n};\nexport const clearUserCart = (user, items) => (dispatch, getState) => {\n  // let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  let newCart = [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(newCart));\n  items.map(item => {\n    if (item.userRefID === user._id) {\n      return axios.delete(`/api/items/${item._id}`, tokenConfig(getState));\n    } else return item;\n  });\n  dispatch({\n    type: CLEAR_USER_CART,\n    payload: user._id\n  });\n}; // export const handleShow = item => {\n//   return {\n//     type: SHOW_MORE,\n//     payload: item\n//   };\n// };\n\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/physio_site/client/src/actions/itemActions.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","ADD_ITEM_TO_CART","ADD_ITEM_TO_GUEST_CART","GET_GUEST_CART","CLEAR_USER_CART","CLEAR_GUEST_CART","DELETE_FROM_GUEST_CART","axios","tokenConfig","tokenConfigFormData","returnErrors","getItems","dispatch","setItemsLoading","get","then","res","type","payload","data","catch","err","response","status","deleteItem","id","getState","delete","addItem","newItem","formData","form","Object","keys","reduce","f","k","append","FormData","console","log","getAll","post","addItemToCart","items","item","user","auth","isAuthenticated","existingGuestCart","JSON","parse","localStorage","getItem","newItems","filter","userRefID","_id","userLocalCompare","guestItem","some","userItem","guestItemID","length","map","addItemToGuestCart","push","setItem","stringify","getGuestCartItems","deleteGuestItem","newGuestCart","cartItem","clearGuestCart","clear","clearUserCart","newCart"],"mappings":"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","sourcesContent":["import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING,\n  ADD_ITEM_TO_CART,\n  ADD_ITEM_TO_GUEST_CART,\n  GET_GUEST_CART,\n  // DELETE_FROM_GUEST_CART,\n  CLEAR_USER_CART,\n  CLEAR_GUEST_CART,\n  DELETE_FROM_GUEST_CART\n} from \"./types\";\nimport axios from \"axios\";\nimport { tokenConfig, tokenConfigFormData } from \"../actions/authActions\";\nimport { returnErrors } from \"../actions/errorActions\";\n\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios\n    .get(\"/api/items\")\n    .then(res =>\n      dispatch({\n        type: GET_ITEMS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n// export const loadLocalToUser = () => (dispatch, getState) => {\n//   let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"))\n\n// };\nexport const deleteItem = id => (dispatch, getState) => {\n  axios\n    .delete(`/api/items/${id}`, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_ITEM,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const addItem = (newItem, formData) => (dispatch, getState) => {\n  const form = Object.keys(newItem).reduce((f, k) => {\n    f.append(k, newItem[k]);\n    return f;\n  }, new FormData());\n  console.log(form.getAll(\"productImage\"));\n\n  return axios\n    .post(\"/api/items\", formData, tokenConfigFormData(getState))\n    .then(res =>\n      dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n      })\n    )\n\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const addItemToCart = newItem => (dispatch, getState) => {\n  const { items } = getState().item;\n  const { user } = getState().auth;\n  const { isAuthenticated } = getState().auth;\n  if (isAuthenticated) {\n    let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n    // added userID to guest cart items\n    let newItems =\n      existingGuestCart &&\n      existingGuestCart.filter(item => {\n        if (item.userRefID !== user._id) {\n          item.userRefID = user._id;\n        }\n        return item;\n      });\n    let userLocalCompare =\n      newItems &&\n      newItems.filter(guestItem => {\n        return items.some(\n          userItem =>\n            userItem._id === guestItem._id &&\n            guestItem.guestItemID !== userItem.guestItemID\n        );\n      });\n    console.log(userLocalCompare);\n    // this.props.addItemToCart(userLocalCompare);\n  }\n\n  if (newItem && newItem.length === 1) {\n    axios\n      .post(\n        \"/api/items/cart\",\n        newItem,\n\n        tokenConfig(getState)\n      )\n      .then(res =>\n        dispatch({\n          type: ADD_ITEM_TO_CART,\n          payload: res.data\n        })\n      )\n\n      .catch(err =>\n        dispatch(returnErrors(err.response.data, err.response.status))\n      );\n  } else if (newItem && newItem.length > 1) {\n    newItem &&\n      newItem.map(item => {\n        return axios\n          .post(\n            \"/api/items/cart\",\n            item,\n\n            tokenConfig(getState)\n          )\n          .then(res =>\n            dispatch({\n              type: ADD_ITEM_TO_CART,\n              payload: res.data\n            })\n          );\n\n        // .catch(err =>\n        //   dispatch(returnErrors(err.response.data, err.response.status))\n        // );\n      });\n  } else if (newItem === []) return null;\n};\nexport const addItemToGuestCart = item => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  // const newGuestItemID = uuid();\n  // item.guestItemID = uuidv4() + shortid.generate();\n\n  existingGuestCart.push(item);\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n\n  dispatch({\n    type: ADD_ITEM_TO_GUEST_CART,\n    payload: item\n  });\n};\n\nexport const getGuestCartItems = () => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  dispatch({\n    type: GET_GUEST_CART,\n    payload: existingGuestCart\n  });\n};\n\nexport const deleteGuestItem = item => dispatch => {\n  const existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const newGuestCart = existingGuestCart.filter(\n    cartItem => cartItem.guestItemID !== item.guestItemID\n  );\n\n  localStorage.setItem(\"guestCart\", JSON.stringify(newGuestCart));\n  dispatch({\n    type: DELETE_FROM_GUEST_CART,\n    payload: item\n  });\n};\nexport const clearGuestCart = () => dispatch => {\n  localStorage.clear();\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n\n  dispatch({\n    type: CLEAR_GUEST_CART\n  });\n};\nexport const clearUserCart = (user, items) => (dispatch, getState) => {\n  // let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  let newCart = [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(newCart));\n\n  items.map(item => {\n    if (item.userRefID === user._id) {\n      return axios.delete(`/api/items/${item._id}`, tokenConfig(getState));\n    } else return item;\n  });\n\n  dispatch({\n    type: CLEAR_USER_CART,\n    payload: user._id\n  });\n};\n// export const handleShow = item => {\n//   return {\n//     type: SHOW_MORE,\n//     payload: item\n//   };\n// };\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};\n"]},"metadata":{},"sourceType":"module"}