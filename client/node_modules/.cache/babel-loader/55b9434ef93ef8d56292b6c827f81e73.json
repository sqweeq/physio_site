{"ast":null,"code":"import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING, ADD_ITEM_TO_CART, ADD_ITEM_TO_GUEST_CART, GET_GUEST_CART, CLEAR_USER_CART, CLEAR_GUEST_CART, DELETE_FROM_GUEST_CART } from \"./types\";\nimport axios from \"axios\";\nimport { tokenConfig, tokenConfigFormData } from \"../actions/authActions\";\nimport { returnErrors } from \"../actions/errorActions\"; // get items\n\nexport const getItems = () => (dispatch, getState) => {\n  dispatch(setItemsLoading());\n  axios.get(\"/api/items\").then(res => dispatch({\n    type: GET_ITEMS,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}; // delete items\n\nexport const deleteItem = id => (dispatch, getState) => {\n  axios.delete(`/api/items/${id}`, tokenConfig(getState)).then(res => dispatch({\n    type: DELETE_ITEM,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}; // add product to db\n\nexport const addItem = (newItem, formData) => (dispatch, getState) => {\n  const form = Object.keys(newItem).reduce((f, k) => {\n    f.append(k, newItem[k]);\n    return f;\n  }, new FormData());\n  console.log(form.getAll(\"productImage\"));\n  return axios.post(\"/api/items\", formData, tokenConfigFormData(getState)).then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}; // add item to cart\n\nexport const addItemToCart = newItem => (dispatch, getState) => {\n  if (newItem.constructor.name === \"Object\") {\n    return axios.post(\"/api/items/cart\", newItem, tokenConfig(getState)).then(res => dispatch({\n      type: ADD_ITEM_TO_CART,\n      payload: res.data\n    })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n  } else if (newItem.length > 1) {\n    newItem.map(item => {\n      return axios.post(\"/api/items/cart\", item, tokenConfig(getState)).then(res => dispatch({\n        type: ADD_ITEM_TO_CART,\n        payload: res.data\n      })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n    });\n  }\n}; // add item to localstorage for guest cart\n\nexport const addItemToGuestCart = item => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  existingGuestCart.push(item);\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n  dispatch({\n    type: ADD_ITEM_TO_GUEST_CART,\n    payload: item\n  });\n}; // get localstorage cart items\n\nexport const getGuestCartItems = () => dispatch => {\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  dispatch({\n    type: GET_GUEST_CART,\n    payload: existingGuestCart\n  });\n}; // delte localstorage guest cart item\n\nexport const deleteGuestItem = item => dispatch => {\n  const existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const newGuestCart = existingGuestCart.filter(cartItem => cartItem.guestItemID !== item.guestItemID);\n  localStorage.setItem(\"guestCart\", JSON.stringify(newGuestCart));\n  dispatch({\n    type: DELETE_FROM_GUEST_CART,\n    payload: item\n  });\n}; // clearall localstorage\n\nexport const clearGuestCart = () => dispatch => {\n  localStorage.clear();\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\n  dispatch({\n    type: CLEAR_GUEST_CART\n  });\n}; // clear user cart\n\nexport const clearUserCart = (user, items) => (dispatch, getState) => {\n  let newCart = [];\n  localStorage.setItem(\"guestCart\", JSON.stringify(newCart));\n  items.map(item => {\n    if (item.userRefID === user._id) {\n      return axios.delete(`/api/items/${item._id}`, tokenConfig(getState));\n    } else return item;\n  });\n  dispatch({\n    type: CLEAR_USER_CART,\n    payload: user._id\n  });\n};\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/Brandon/Documents/projects/physio_site/client/src/actions/itemActions.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","ADD_ITEM_TO_CART","ADD_ITEM_TO_GUEST_CART","GET_GUEST_CART","CLEAR_USER_CART","CLEAR_GUEST_CART","DELETE_FROM_GUEST_CART","axios","tokenConfig","tokenConfigFormData","returnErrors","getItems","dispatch","getState","setItemsLoading","get","then","res","type","payload","data","catch","err","response","status","deleteItem","id","delete","addItem","newItem","formData","form","Object","keys","reduce","f","k","append","FormData","console","log","getAll","post","addItemToCart","constructor","name","length","map","item","addItemToGuestCart","existingGuestCart","JSON","parse","localStorage","getItem","push","setItem","stringify","getGuestCartItems","deleteGuestItem","newGuestCart","filter","cartItem","guestItemID","clearGuestCart","clear","clearUserCart","user","items","newCart","userRefID","_id"],"mappings":"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","sourcesContent":["import {\r\n  GET_ITEMS,\r\n  ADD_ITEM,\r\n  DELETE_ITEM,\r\n  ITEMS_LOADING,\r\n  ADD_ITEM_TO_CART,\r\n  ADD_ITEM_TO_GUEST_CART,\r\n  GET_GUEST_CART,\r\n  CLEAR_USER_CART,\r\n  CLEAR_GUEST_CART,\r\n  DELETE_FROM_GUEST_CART\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { tokenConfig, tokenConfigFormData } from \"../actions/authActions\";\r\nimport { returnErrors } from \"../actions/errorActions\";\r\n// get items\r\nexport const getItems = () => (dispatch, getState) => {\r\n  dispatch(setItemsLoading());\r\n  axios\r\n    .get(\"/api/items\")\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_ITEMS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n// delete items\r\nexport const deleteItem = id => (dispatch, getState) => {\r\n  axios\r\n    .delete(`/api/items/${id}`, tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: DELETE_ITEM,\r\n        payload: id\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n// add product to db\r\nexport const addItem = (newItem, formData) => (dispatch, getState) => {\r\n  const form = Object.keys(newItem).reduce((f, k) => {\r\n    f.append(k, newItem[k]);\r\n    return f;\r\n  }, new FormData());\r\n  console.log(form.getAll(\"productImage\"));\r\n\r\n  return axios\r\n    .post(\"/api/items\", formData, tokenConfigFormData(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: ADD_ITEM,\r\n        payload: res.data\r\n      })\r\n    )\r\n\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n// add item to cart\r\nexport const addItemToCart = newItem => (dispatch, getState) => {\r\n  if (newItem.constructor.name === \"Object\") {\r\n    return axios\r\n      .post(\"/api/items/cart\", newItem, tokenConfig(getState))\r\n      .then(res =>\r\n        dispatch({\r\n          type: ADD_ITEM_TO_CART,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err =>\r\n        dispatch(returnErrors(err.response.data, err.response.status))\r\n      );\r\n  } else if (newItem.length > 1) {\r\n    newItem.map(item => {\r\n      return axios\r\n        .post(\"/api/items/cart\", item, tokenConfig(getState))\r\n        .then(res =>\r\n          dispatch({\r\n            type: ADD_ITEM_TO_CART,\r\n            payload: res.data\r\n          })\r\n        )\r\n        .catch(err =>\r\n          dispatch(returnErrors(err.response.data, err.response.status))\r\n        );\r\n    });\r\n  }\r\n};\r\n// add item to localstorage for guest cart\r\nexport const addItemToGuestCart = item => dispatch => {\r\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\r\n\r\n  existingGuestCart.push(item);\r\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\r\n\r\n  dispatch({\r\n    type: ADD_ITEM_TO_GUEST_CART,\r\n    payload: item\r\n  });\r\n};\r\n// get localstorage cart items\r\nexport const getGuestCartItems = () => dispatch => {\r\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\r\n  dispatch({\r\n    type: GET_GUEST_CART,\r\n    payload: existingGuestCart\r\n  });\r\n};\r\n// delte localstorage guest cart item\r\nexport const deleteGuestItem = item => dispatch => {\r\n  const existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\r\n  const newGuestCart = existingGuestCart.filter(\r\n    cartItem => cartItem.guestItemID !== item.guestItemID\r\n  );\r\n\r\n  localStorage.setItem(\"guestCart\", JSON.stringify(newGuestCart));\r\n  dispatch({\r\n    type: DELETE_FROM_GUEST_CART,\r\n    payload: item\r\n  });\r\n};\r\n// clearall localstorage\r\nexport const clearGuestCart = () => dispatch => {\r\n  localStorage.clear();\r\n  let existingGuestCart = JSON.parse(localStorage.getItem(\"guestCart\")) || [];\r\n  localStorage.setItem(\"guestCart\", JSON.stringify(existingGuestCart));\r\n\r\n  dispatch({\r\n    type: CLEAR_GUEST_CART\r\n  });\r\n};\r\n// clear user cart\r\nexport const clearUserCart = (user, items) => (dispatch, getState) => {\r\n  let newCart = [];\r\n  localStorage.setItem(\"guestCart\", JSON.stringify(newCart));\r\n\r\n  items.map(item => {\r\n    if (item.userRefID === user._id) {\r\n      return axios.delete(`/api/items/${item._id}`, tokenConfig(getState));\r\n    } else return item;\r\n  });\r\n\r\n  dispatch({\r\n    type: CLEAR_USER_CART,\r\n    payload: user._id\r\n  });\r\n};\r\n\r\nexport const setItemsLoading = () => {\r\n  return {\r\n    type: ITEMS_LOADING\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}