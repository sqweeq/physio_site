{"ast":null,"code":"var _jsxFileName = \"/Users/katie/Desktop/Brandon projects/physio_site/client/src/components/Register.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport Navigation from \"./Navigation\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      msg: null\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            password = _this$state.password;\n      const newUser = {\n        name,\n        email,\n        password\n      };\n      this.props.register(newUser, this.props.history);\n      console.log(newUser);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const error = this.props.error;\n\n    if (error !== prevProps.error) {\n      if (error && error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  validateEmail(email) {\n    const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regexp.test(email);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"overflow-hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"div\", {\n      className: \"pb-5 pt-3 px-5 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group pb-2 px-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"exampleInputName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      className: \"form-control pl-2 py-1 \" + (this.state.name.length && this.state.name.length >= 6 ? \"is-valid\" : \"is-invalid\"),\n      placeholder: \"Enter name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Name must be longer than 6 characters\")), React.createElement(\"div\", {\n      className: \"form-group p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"exampleInputEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Email Address\"), React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      className: \"form-control pl-2 py-1 \" + (this.validateEmail(this.state.email) === true ? \"is-valid\" : \"is-invalid\"),\n      placeholder: \"Enter email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Email must be valid\")), React.createElement(\"div\", {\n      className: \"form-group p-2 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"exampleInputPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      className: \"form-control pl-2 py-1 \" + (this.state.password.length && this.state.password.length >= 6 ? \"is-valid\" : \"is-invalid\"),\n      placeholder: \"Enter password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Password must be longer than 6 characters\")), this.state.msg ? React.createElement(\"span\", {\n      className: \"pl-2 text-danger text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.msg) : null, React.createElement(\"div\", {\n      className: \"p-2 py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"footer\", {\n      className: \"py-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      className: \"p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Already a user?\")))));\n  }\n\n}\n\nRegister.propTypes = {\n  error: PropTypes.object,\n  register: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(withRouter(Register));","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/physio_site/client/src/components/Register.js"],"names":["React","Component","connect","register","PropTypes","Navigation","Link","withRouter","Register","state","name","email","password","msg","handleChange","e","setState","target","value","handleSubmit","preventDefault","newUser","props","history","console","log","componentDidUpdate","prevProps","error","id","validateEmail","regexp","test","render","length","propTypes","object","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport Navigation from \"./Navigation\";\nimport { Link, withRouter } from \"react-router-dom\";\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n  static propTypes = {\n    error: PropTypes.object,\n    register: PropTypes.func.isRequired\n  };\n  componentDidUpdate(prevProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      if (error && error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    const newUser = {\n      name,\n      email,\n      password\n    };\n    this.props.register(newUser, this.props.history);\n    console.log(newUser);\n  };\n  validateEmail(email) {\n    const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regexp.test(email);\n  }\n  render() {\n    return (\n      <div className=\"overflow-hidden\">\n        <Navigation />\n        <form noValidate onSubmit={this.handleSubmit}>\n          <h1 className=\"text-center pt-5\">Register</h1>\n\n          <div className=\"pb-5 pt-3 px-5 mx-auto\">\n            <div className=\"form-group pb-2 px-2\">\n              <label htmlFor=\"exampleInputName\">Name</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className={\n                  \"form-control pl-2 py-1 \" +\n                  (this.state.name.length && this.state.name.length >= 6\n                    ? \"is-valid\"\n                    : \"is-invalid\")\n                }\n                placeholder=\"Enter name\"\n                onChange={this.handleChange}\n              />\n              <div className=\"invalid-feedback\">\n                Name must be longer than 6 characters\n              </div>\n            </div>\n            <div className=\"form-group p-2\">\n              <label htmlFor=\"exampleInputEmail\">Email Address</label>\n              <input\n                name=\"email\"\n                type=\"email\"\n                className={\n                  \"form-control pl-2 py-1 \" +\n                  (this.validateEmail(this.state.email) === true\n                    ? \"is-valid\"\n                    : \"is-invalid\")\n                }\n                placeholder=\"Enter email\"\n                onChange={this.handleChange}\n              />\n              <div className=\"invalid-feedback\">Email must be valid</div>\n            </div>\n            <div className=\"form-group p-2 \">\n              <label htmlFor=\"exampleInputPassword\">Password</label>\n              <input\n                name=\"password\"\n                type=\"password\"\n                className={\n                  \"form-control pl-2 py-1 \" +\n                  (this.state.password.length && this.state.password.length >= 6\n                    ? \"is-valid\"\n                    : \"is-invalid\")\n                }\n                placeholder=\"Enter password\"\n                onChange={this.handleChange}\n              />\n              <div className=\"invalid-feedback\">\n                Password must be longer than 6 characters\n              </div>\n            </div>\n            {this.state.msg ? (\n              <span className=\"pl-2 text-danger text-center\">\n                {this.state.msg}\n              </span>\n            ) : null}\n\n            <div className=\"p-2 py-4\">\n              <button type=\"submit\" className=\"btn btn-primary p-3\">\n                Submit\n              </button>\n            </div>\n            <footer className=\"py-5\">\n              <Link to=\"/login\" className=\"p-3\">\n                Already a user?\n              </Link>\n            </footer>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  error: state.error\n});\n\nexport default connect(mapStateToProps, { register })(withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}